// 将键绑定放在此文件中以覆盖默认值
[
    // 切换编辑器 tab
    {
      "key": "ctrl+j",
      "command": "workbench.action.nextEditor",
      "when": "!suggestWidgetVisible"
  },
  {
      "key": "ctrl+k",
      "command": "workbench.action.previousEditor",
      "when": "!suggestWidgetVisible"
  },
  //删除当前行
  {
    "key": "cmd+d",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  //注释当前行
  {
    "key": "cmd+q",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  //块注释
  {
    "key": "cmd+/",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+q",
    "command": "workbench.action.quit",
    "when": "!editorFocus"
  },
  //搜索替换
  {
    "key": "cmd+e",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  // 折叠
  {
    "key": "cmd+2",
    "command": "editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+3",
    "command": "editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+4",
    "command": "editor.foldLevel4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+0",
    "command": "editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+l",
    "command": "editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+j",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  //切资源管理器
  {
    "key": "ctrl+;",
    "command": "workbench.view.explorer"
  },
  //切编辑区
  {
    "key": "ctrl+'",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  //创建文件 
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  //创建文件夹
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  //删除文件和文件夹 
  {
    "key": "shift+d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  //向下复制
  {
    "key": "shift+alt+down",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "cmd+g",
    "command": "workbench.action.gotoLine"
  },
  {
    // 窗口焦点左移  */
    "key": "shift+left",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal'",
    "args": {
      "after": [
        "<c-w>",
        "h"
      ]
    }
  },
  {
    //  窗口焦点右移动  */
    "key": "shift+right",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal'",
    "args": {
      "after": [
        "<c-w>",
        "l"
      ]
    }
  },
  {
    // 焦点上移 */
    "key": "shift+up",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal'",
    "args": {
      "after": [
        "<c-w>",
        "k"
      ]
    }
  },
  {
    //  焦点下移 */
    "key": "shift+down",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal'",
    "args": {
      "after": [
        "<c-w>",
        "j"
      ]
    }
  },
  //终端最大化
  {
    "key": "ctrl+,",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "terminalFocus"
  },
  //终端选项卡间切换
  {
    "key": "shift+up",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+down",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  //终端分栏间切换
  {
    "key": "shift+left",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+right",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  //关闭当前终端
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus && terminalProcessSupported"
  },
  //打开外部终端
  {
    "key": "shift+cmd+c",
    "command": "workbench.action.terminal.openNativeConsole",
    "when": "terminalFocus"
  },
  //聚焦到源代码管理
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  //reload 插件重新加载
  {
    "key": "shift+cmd+r",
    "command": "workbench.action.reloadWindow"
  },
  {
    "key": "shift+cmd+n",
    "command": "-workbench.action.newWindow"
  },
  //快捷打印
  {
    "key": "shift+cmd+c",
    "command": "consoleLog.insertLogStatement",
    "when": "editorTextFocus"
  },
  //快捷删除打印
  {
    "key": "shift+cmd+d",
    "command": "consoleLog.deleteAllLogStatements",
    "when": "editorTextFocus"
  },
  //vim normal 和 visual模式上下翻半页
  {
    "key": "ctrl+d",
    "command": "-vim.pageDown",
    "when": "editorTextFocus && vim.active && (vim.mode == 'Normal' || vim.mode == 'Visual') && !inDebugRepl"
  },
  {
    "key": "ctrl+u",
    "command": "-vim.pageUp",
    "when": "editorTextFocus && vim.active && (vim.mode == 'Normal' || vim.mode == 'Visual') && !inDebugRepl"
  },
  {
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "cmd+r f",
    "command": "-delete-function.deleteFunction"
  },
  {
    "key": "ctrl+l",
    "command": "testing.clearTestResults"
  },
  {
    "key": "shift+alt+j",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+k",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k o",
    "command": "-workbench.action.files.showOpenedFileInNewWindow",
    "when": "emptyWorkspaceSupport"
  },
  {
    "key": "cmd+k o",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "alt+cmd+t",
    "command": "-workbench.action.closeOtherEditors"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.terminal.clear",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+k",
    "command": "-workbench.action.terminal.clear",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.chat.clear",
    "when": "hasChatProvider && inChat"
  },
  {
    "key": "ctrl+l",
    "command": "-workbench.action.chat.clear",
    "when": "hasChatProvider && inChat"
  },
  {
    "key": "alt+cmd+f",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+alt+`",
    "command": "extension.js-debug.createDebuggerTerminal"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.debug.prevConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.debug.prevConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.debug.nextConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.debug.nextConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+down",
    "command": "workbench.action.debug.nextConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+l",
    "command": "-consoleLog.insertLogStatement",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+l cmd+o",
    "command": "-extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+\\",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "cmd+k cmd+\\",
    "command": "-workbench.action.splitEditorDown"
  },
  {
    "key": "shift+cmd+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+\\",
    "command": "-workbench.action.terminal.focusTabs",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "shift+cmd+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+delete",
    "command": "-deleteRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-deleteRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "-deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "ctrl+/",
    "command": "workbench.panel.chat.view.copilot.focus",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+shift+-",
    "command": "workbench.action.decreaseViewWidth"
  },
  {
    "key": "cmd+shift+=",
    "command": "workbench.action.increaseViewWidth"
  },
  {
    "key": "cmd+shift+0",
    "command": "workbench.action.evenEditorWidths"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.terminal.runRecentCommand",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFile",
    "when": "false"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFolderViaWorkspace",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFileFolder",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openLocalFileFolder",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "cmd+o",
    "command": "workbench.action.files.openFile"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  }
]
